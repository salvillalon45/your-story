import React from "react";
import clsx from "clsx";
import { makeStyles } from "@material-ui/core/styles";
import Drawer from "@material-ui/core/Drawer";
import Button from "@material-ui/core/Button";
import List from "@material-ui/core/List";
import Divider from "@material-ui/core/Divider";
import ListItem from "@material-ui/core/ListItem";
import ListItemIcon from "@material-ui/core/ListItemIcon";
import ListItemText from "@material-ui/core/ListItemText";
import InboxIcon from "@material-ui/icons/MoveToInbox";
import MailIcon from "@material-ui/icons/Mail";
import AddCircleIcon from "@material-ui/icons/AddCircle";
import EditIcon from "@material-ui/icons/Edit";
import VisibilityIcon from "@material-ui/icons/Visibility";
import InfoIcon from "@material-ui/icons/Info";
import HomeIcon from "@material-ui/icons/Home";

const useStyles = makeStyles({
  list: {
    width: 250
  },
  fullList: {
    width: "auto"
  }
});

export default function TemporaryDrawer() {
  const classes = useStyles();
  const [showMenu, setShowMenu] = React.useState(false);
  // const [state, setState] = React.useState({
  //   right: false
  // });

  function toggleDrawer(event) {
    // const toggleDrawer = (open) => (event) => {
    if (
      event.type === "keydown" &&
      (event.key === "Tab" || event.key === "Shift")
    ) {
      return;
    }

    // setState({ ...state, right: open });
    setShowMenu(!showMenu);
  }

  function showIcon(descriptionIndex) {
    if (descriptionIndex === 0) {
      return <HomeIcon/>
    } else if  (descriptionIndex === 1) {
      return <InfoIcon/>
    }
  }

  function createMenuItems() {
    return ["Home", "About", "Add To Your Story", "Edit Your Story", "View Your Story"].map((text, index) => {
      return (
      <ListItem button key={text}>
        <ListItemIcon>

        </ListItemIcon>
        <ListItemText primary={text} />
      </ListItem>
      )
    })}
  }

  const list = (anchor) => (
    <div
      className={clsx(classes.list, {
        [classes.fullList]: anchor === "top" || anchor === "bottom"
      })}
      role="presentation"
      onClick={(event) => toggleDrawer(event)}
      onKeyDown={(event) => toggleDrawer(event)}
    >
      <List>
        {["Inbox", "Starred", "Send email", "Drafts"].map((text, index) => (
          <ListItem button key={text}>
            <ListItemIcon>
              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}
            </ListItemIcon>
            <ListItemText primary={text} />
          </ListItem>
        ))}
      </List>
      <Divider />
      <List>
        {["All mail", "Trash", "Spam"].map((text, index) => (
          <ListItem button key={text}>
            <ListItemIcon>
              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}
            </ListItemIcon>
            <ListItemText primary={text} />
          </ListItem>
        ))}
      </List>
    </div>
  );

  return (
    <div>
      {/* {['right'].map((anchor) => ( */}
      <React.Fragment key="right">
        <Button onClick={(event) => toggleDrawer(event)}>Right</Button>
        <Drawer
          anchor="right"
          open={showMenu}
          onClose={(event) => toggleDrawer(event)}
        >
          {list("right")}
        </Drawer>
      </React.Fragment>
      {/* ))} */}
    </div>
  );
}
